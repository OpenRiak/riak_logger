%%
%% advanced.config logger configuration
%%
[
    {kernel, [
        {logger_level, info},

        %% Records most events at 'logger_level' or higher
        %% Excludes crashes (crash.log) and SASL (report.log)
        {logger, [
            {handler, default, logger_std_h, #{
                level => all,
                config => #{
                    file => "{{platform_log_dir}}/console.log",
                    file_check => 100,
                    max_no_bytes => 1048576,
                    max_no_files => 10
                },
                filter_default => log,
                filters => [
                    {default_filter, {fun riak_logger:filter_ces/2, stop}}
                ],
                formatter => {logger_formatter, #{
                    legacy_header => false,
                    single_line => true,
                    time_designator => $\s,
                    template => [
                        time, " [", level, "] ", {pid, [pid, "@"], []},
                        {mfa, [mfa, ":"], []}, {line, [line, ":"], []},
                        " ", msg, "\n"
                    ]
                }}
            }},

            %% Records all events at 'error' level or higher
            {handler, error_log, logger_std_h, #{
                level => error,
                config => #{
                    file => "{{platform_log_dir}}/error.log",
                    file_check => 100,
                    max_no_bytes => 1048576,
                    max_no_files => 10
                },
                filter_default => log,
                filters => [],
                formatter => {logger_formatter, #{
                    legacy_header => false,
                    single_line => true,
                    time_designator => $\s,
                    template => [
                        time, " [", level, "] ", {pid, [pid, "@"], []},
                        {mfa, [mfa, ":"], []}, {line, [line, ":"], []},
                        " ", msg, "\n"
                    ]
                }}
            }},

            %% Records process crashes
            {handler, crash_log, logger_std_h, #{
                level => all,
                config => #{
                    file => "{{platform_log_dir}}/crash.log",
                    file_check => 100,
                    max_no_bytes => 1048576,
                    max_no_files => 10
                },
                filter_default => stop,
                filters => [
                    {crash_filter, {fun riak_logger:filter_ce/2, log}}
                ],
                formatter => {logger_formatter, #{
                    legacy_header => false,
                    single_line => false,
                    time_designator => $\s,
                    template => [
                        time, " [", level, "] ", {pid, [pid, "@"], []},
                        {mfa, [mfa, ":"], []}, {line, [line, ":"], []},
                        " ", msg, "\n"
                    ]
                }}
            }},

            %% Records progress and SASL reports
            {handler, report_log, logger_std_h, #{
                level => info,
                config => #{
                    file => "{{platform_log_dir}}/report.log",
                    file_check => 100,
                    max_no_bytes => 1048576,
                    max_no_files => 10
                },
                filter_default => stop,
                filters => [
                    {report_filter, {fun riak_logger:filter_ps/2, log}}
                ],
                formatter => {logger_formatter, #{
                    legacy_header => false,
                    single_line => false,
                    time_designator => $\s,
                    template => [
                        time, " [", level, "] ", {pid, [pid, "@"], []},
                        {mfa, [mfa, ":"], []}, {line, [line, ":"], []},
                        " ", msg, "\n"
                    ]
                }}
            }}
        ]}
    ]},

    {syslog, [
        %% openlog initialization values
        {identity,  "riak"},
        {facility,  daemon},
        {options,   [pid, cons]},

        %% Records most events at 'info' level or higher to syslog
        %% Excludes reports (report.log)
        {logger, [
            {handler, syslog, syslog, #{
                level => info,
                config => daemon,
                filter_default => log,
                filters => [
                    {syslog_filter, {fun riak_logger:filter_ps/2, stop}}
                ],
                formatter => {syslog, #{max_size => 512}}
            }}
        ]}
    ]}
].
